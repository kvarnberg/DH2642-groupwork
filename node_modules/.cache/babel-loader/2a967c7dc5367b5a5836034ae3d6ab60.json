{"ast":null,"code":"var _jsxFileName = \"/Users/josephinekvarnberg/Documents/project-joke/src/App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"this is App\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(FetchRandom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }))));\n}\n\nclass FetchRandom extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://us-central1-dadsofunny.cloudfunctions.net/DadJokes/random/jokes\";\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data.setup);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"loading...\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"person...\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josephinekvarnberg/Documents/project-joke/src/App.js"],"names":["React","App","logo","FetchRandom","Component","state","loading","componentDidMount","url","response","fetch","data","json","console","log","setup","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF,CADF;AAWD;;AAED,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACNC,MAAAA,OAAO,EAAE;AADH,KADgC;AAAA;;AAKxC,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,GAAG,GACP,yEADF;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,KAAjB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWC,OAAX,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArB,GAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADhD,CADF;AAKD;;AAnBuC;;AAsB1C,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>this is App</p>\n        <h1>\n          <FetchRandom />\n        </h1>\n      </header>\n    </div>\n  );\n}\n\nclass FetchRandom extends React.Component {\n  state = {\n    loading: true\n  };\n\n  async componentDidMount() {\n    const url =\n      \"https://us-central1-dadsofunny.cloudfunctions.net/DadJokes/random/jokes\";\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data.setup);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? <div>loading...</div> : <div>person...</div>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}