{"ast":null,"code":"var _jsxFileName = \"/Users/josephinekvarnberg/Documents/project-joke/src/App.js\";\nimport React from \"react\";\nimport loading from \"./loading.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: loading,\n    className: \"App-loading\",\n    alt: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"randomButton\",\n    onClick: refreshPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Random joke\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(FetchRandom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }))));\n}\n\nclass FetchRandom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      setup: \"\",\n      punchline: \"\",\n      onClick: false\n    };\n    this.displayPunch = this.displayPunch.bind(this);\n  }\n\n  async componentDidMount() {\n    const url = \"https://us-central1-dadsofunny.cloudfunctions.net/DadJokes/random/jokes\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      loading: false,\n      setup: data.setup,\n      punchline: data.punchline\n    });\n    console.log(data);\n  }\n\n  displayPunch() {\n    this.setState({\n      onClick: !this.state.onClick\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"loading...\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.setup), React.createElement(\"button\", {\n      className: \"Button\",\n      onClick: this.displayPunch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.onClick ? \"Hide answer \" : \"Show answer\"), this.state.onClick ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.punchline) : React.createElement(React.Fragment, null)));\n  }\n\n}\n\nfunction refreshPage() {\n  window.location.reload();\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josephinekvarnberg/Documents/project-joke/src/App.js"],"names":["React","App","loading","refreshPage","FetchRandom","Component","constructor","props","state","setup","punchline","onClick","displayPunch","bind","componentDidMount","url","response","fetch","data","json","setState","console","log","render","window","location","reload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAA2C,IAAA,GAAG,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAEC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,CADF;AAaD;;AAED,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXN,MAAAA,OAAO,EAAE,IADE;AAEXO,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,GAAG,GACP,yEADF;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AACZlB,MAAAA,OAAO,EAAE,KADG;AAEZO,MAAAA,KAAK,EAAES,IAAI,CAACT,KAFA;AAGZC,MAAAA,SAAS,EAAEQ,IAAI,CAACR;AAHJ,KAAd;AAKAW,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD;;AAEDN,EAAAA,YAAY,GAAG;AACb,SAAKQ,QAAL,CAAc;AACZT,MAAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADT,KAAd;AAGD;;AAEDY,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,KAAL,CAAWN,OAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKM,KAAL,CAAWC,KAAjB,CADF,EAEE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,KAAKG,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWG,OAAX,GAAqB,cAArB,GAAsC,aADzC,CAFF,EAKG,KAAKH,KAAL,CAAWG,OAAX,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKH,KAAL,CAAWE,SAAjB,CAArB,GAAyD,yCAL5D,CAJJ,CADF;AAeD;;AA/CuC;;AAkD1C,SAASP,WAAT,GAAuB;AACrBqB,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;AAED,eAAezB,GAAf","sourcesContent":["import React from \"react\";\nimport loading from \"./loading.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={loading} className=\"App-loading\" alt=\"loading\" />\n        <button className=\"randomButton\" onClick={refreshPage}>\n          Random joke\n        </button>\n        <h1>\n          <FetchRandom />\n        </h1>\n      </header>\n    </div>\n  );\n}\n\nclass FetchRandom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      setup: \"\",\n      punchline: \"\",\n      onClick: false\n    };\n    this.displayPunch = this.displayPunch.bind(this);\n  }\n\n  async componentDidMount() {\n    const url =\n      \"https://us-central1-dadsofunny.cloudfunctions.net/DadJokes/random/jokes\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      loading: false,\n      setup: data.setup,\n      punchline: data.punchline\n    });\n    console.log(data);\n  }\n\n  displayPunch() {\n    this.setState({\n      onClick: !this.state.onClick\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          <div>loading...</div>\n        ) : (\n          <div>\n            <div>{this.state.setup}</div>\n            <button className=\"Button\" onClick={this.displayPunch}>\n              {this.state.onClick ? \"Hide answer \" : \"Show answer\"}\n            </button>\n            {this.state.onClick ? <div>{this.state.punchline}</div> : <></>}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction refreshPage() {\n  window.location.reload();\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}